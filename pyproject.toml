[tool.poetry]
name = "retry-tasks-lib"
version = "0.0.0"
description = "helpers functions and models for setting up tasks with rq"
authors = ["Bink <bink@bink.bink>"]
readme = "README.md"
repository = "https://github.com/binkhq/retry-tasks-lib"
keywords = ["rq", "sqlalchemy", "flask_admin"]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "retry_tasks_lib" },
]

[tool.poetry.dependencies]
python = "^3.10"
rq = "^1.10.0"
SQLAlchemy = "^1.4.25"
requests = "^2.26.0"
sentry-sdk = "^1.15.0"
Flask-Admin = { version = "^1.5.8", optional = true }
prometheus-client = {version = "^0.14.1", optional = true }

[tool.poetry.extras]
admin = ["Flask-Admin"]
reporting = ["prometheus-client"]

[tool.poetry.group.dev.dependencies]
pylint-pytest = "^1.1.2"
black = "^22.3.0"
isort = "^5.9.3"
mypy = "^1.0.0"
xenon = "^0.8.0"
types-requests = "^2.25.9"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-asyncio = "^0.15.1"
pytest-mock = "^3.6.1"
ipython = "^7.28.0"
python-dotenv = "^0.19.1"
SQLAlchemy-Utils = "^0.37.8"
asyncpg = "^0.24.0"
psycopg2-binary = "^2.9.1"
types-redis = "^3.5.15"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = false
lines_between_types = 1

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
plugins = [
    "sqlalchemy.ext.mypy.plugin",
]

[tool.pylint.MASTER]
load-plugins=[
    "pylint_pytest",
    "pylint.extensions.mccabe"
]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "logging-fstring-interpolation",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "duplicate-code", # a lot of logic will be similar between sync and async methods but this is expected
]
good-names=["k", "v", "i", "q", "fn", "ex"]
exclude=["tests"]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = '^((?P<epoch>\d+)!)?(?P<base>\d+(\.\d+)*)'

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
